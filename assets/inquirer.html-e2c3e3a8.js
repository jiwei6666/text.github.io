const n=JSON.parse(`{"key":"v-b3c7d4fc","path":"/posts/node/inquirer.html","title":"inquirer 交互","lang":"zh-CN","frontmatter":{"title":"inquirer 交互","icon":"pen-to-square","date":"2023-06-29T00:00:00.000Z","category":["inquirer"],"tag":["node","inquirer"],"description":"\\"inquirer\\"是一个流行的第三方库，用于在命令行界面中提供交互式的用户界面。使用\\"inquirer\\"库，可以轻松地创建各种类型的提示、选择和问题，并根据用户的输入做出相应的响应。这使得开发者可以更加友好地与终端用户进行交互，从而提高应用程序的易用性。 inquirer支持commander的版本是：\\"inquirer\\": \\"^8.2.0\\" inquirer的基本使用 const inquirer = require('inquirer') // 功能列表 const commandList = [ { name: \\"h5\\", value: \\"swiper\\" }, { name: \\"长图文\\", value: \\"graphic\\" } ] // 具体交互内容 const promptList = [ { name: 'type', message: '请选择需要生成的类型：', type: 'list', default: 'all', choices: commandList } ] class Command { constructor() { } init(){ inquirer.prompt(promptList).then(answers =&gt; { const command = this.getCommandObj(answers['type']) // 开始 log.title(\`功能名称：\${command.name}，开始执行...\`) switch(command.value){ case 'swiper': Swiper.run(); break; // 具体执行代码 case 'graphic': LongGraphic.run(); break; // 具体执行代码 } }) } /** * 获取命令对象 * @param {*} command commandList中的value * @returns */ getCommandObj(command){ return commandList.find(item =&gt; item.value == command) } } module.exports = new Command()","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/node/inquirer.html"}],["meta",{"property":"og:site_name","content":"jiwei.zhao"}],["meta",{"property":"og:title","content":"inquirer 交互"}],["meta",{"property":"og:description","content":"\\"inquirer\\"是一个流行的第三方库，用于在命令行界面中提供交互式的用户界面。使用\\"inquirer\\"库，可以轻松地创建各种类型的提示、选择和问题，并根据用户的输入做出相应的响应。这使得开发者可以更加友好地与终端用户进行交互，从而提高应用程序的易用性。 inquirer支持commander的版本是：\\"inquirer\\": \\"^8.2.0\\" inquirer的基本使用 const inquirer = require('inquirer') // 功能列表 const commandList = [ { name: \\"h5\\", value: \\"swiper\\" }, { name: \\"长图文\\", value: \\"graphic\\" } ] // 具体交互内容 const promptList = [ { name: 'type', message: '请选择需要生成的类型：', type: 'list', default: 'all', choices: commandList } ] class Command { constructor() { } init(){ inquirer.prompt(promptList).then(answers =&gt; { const command = this.getCommandObj(answers['type']) // 开始 log.title(\`功能名称：\${command.name}，开始执行...\`) switch(command.value){ case 'swiper': Swiper.run(); break; // 具体执行代码 case 'graphic': LongGraphic.run(); break; // 具体执行代码 } }) } /** * 获取命令对象 * @param {*} command commandList中的value * @returns */ getCommandObj(command){ return commandList.find(item =&gt; item.value == command) } } module.exports = new Command()"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-08T06:39:25.000Z"}],["meta",{"property":"article:author","content":"jiwei.zhao"}],["meta",{"property":"article:tag","content":"node"}],["meta",{"property":"article:tag","content":"inquirer"}],["meta",{"property":"article:published_time","content":"2023-06-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-08T06:39:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"inquirer 交互\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-29T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-08T06:39:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"jiwei.zhao\\",\\"url\\":\\"https://mrhope.site\\"}]}"]]},"headers":[{"level":2,"title":"inquirer的基本使用","slug":"inquirer的基本使用","link":"#inquirer的基本使用","children":[]},{"level":2,"title":"inquirer官网","slug":"inquirer官网","link":"#inquirer官网","children":[]}],"git":{"createdTime":1702017565000,"updatedTime":1702017565000,"contributors":[{"name":"jiwei.zhao","email":"jiwei.zhao@zhaopin.com.cn","commits":1}]},"readingTime":{"minutes":1.36,"words":407},"filePathRelative":"posts/node/inquirer.md","localizedDate":"2023年6月29日","excerpt":"<p>\\"inquirer\\"是一个流行的第三方库，用于在命令行界面中提供交互式的用户界面。使用\\"inquirer\\"库，可以轻松地创建各种类型的提示、选择和问题，并根据用户的输入做出相应的响应。这使得开发者可以更加友好地与终端用户进行交互，从而提高应用程序的易用性。</p>\\n<p>inquirer支持commander的版本是：\\"inquirer\\": \\"^8.2.0\\"</p>\\n<h2> inquirer的基本使用</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> inquirer <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'inquirer'</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// 功能列表</span>\\n<span class=\\"token keyword\\">const</span> commandList <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token literal-property property\\">name</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"h5\\"</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token literal-property property\\">value</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"swiper\\"</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token literal-property property\\">name</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"长图文\\"</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token literal-property property\\">value</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"graphic\\"</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">]</span>\\n\\n<span class=\\"token comment\\">// 具体交互内容</span>\\n<span class=\\"token keyword\\">const</span> promptList <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token literal-property property\\">name</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'type'</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token literal-property property\\">message</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'请选择需要生成的类型：'</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token literal-property property\\">type</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'list'</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token keyword\\">default</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'all'</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token literal-property property\\">choices</span><span class=\\"token operator\\">:</span> commandList\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">]</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Command</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">constructor</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token function\\">init</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        inquirer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">prompt</span><span class=\\"token punctuation\\">(</span>promptList<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">then</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">answers</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">const</span> command <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getCommandObj</span><span class=\\"token punctuation\\">(</span>answers<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'type'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n\\n            <span class=\\"token comment\\">// 开始</span>\\n            log<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">title</span><span class=\\"token punctuation\\">(</span><span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token string\\">功能名称：</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>command<span class=\\"token punctuation\\">.</span>name<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">，开始执行...</span><span class=\\"token template-punctuation string\\">\`</span></span><span class=\\"token punctuation\\">)</span>\\n            \\n            <span class=\\"token keyword\\">switch</span><span class=\\"token punctuation\\">(</span>command<span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token keyword\\">case</span> <span class=\\"token string\\">'swiper'</span><span class=\\"token operator\\">:</span> Swiper<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">run</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token keyword\\">break</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 具体执行代码</span>\\n                <span class=\\"token keyword\\">case</span> <span class=\\"token string\\">'graphic'</span><span class=\\"token operator\\">:</span> LongGraphic<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">run</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token keyword\\">break</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 具体执行代码</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 获取命令对象\\n     * <span class=\\"token keyword\\">@param</span> <span class=\\"token class-name\\"><span class=\\"token punctuation\\">{</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">}</span></span> <span class=\\"token parameter\\">command</span> commandList中的value\\n     * <span class=\\"token keyword\\">@returns</span>\\n     */</span>\\n    <span class=\\"token function\\">getCommandObj</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">command</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> commandList<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">find</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">item</span> <span class=\\"token operator\\">=&gt;</span> item<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">==</span> command<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\nmodule<span class=\\"token punctuation\\">.</span>exports <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Command</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
