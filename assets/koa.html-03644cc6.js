const n=JSON.parse(`{"key":"v-31854014","path":"/posts/node/koa.html","title":"Koa 服务","lang":"zh-CN","frontmatter":{"title":"Koa 服务","icon":"pen-to-square","date":"2023-06-29T00:00:00.000Z","category":["Koa"],"tag":["node","Koa"],"description":"Koa是一个基于Node.js平台的下一代web框架，它使用了ES6的特性，并且非常轻量级。Koa的核心思想是中间件（middleware），通过洋葱模型（onion model）来处理HTTP请求和响应。 inquirer的基本使用 const Koa = require('koa') const logger = require('koa-logger') // 打印日志 const json = require('koa-json') //格式化网页中获取的json数据 const cors = require('koa2-cors') // 解决跨域问题 const bodyParser = require('koa-bodyparser') // 利用koa-bodyparser来处理POST请求参数 const path = require('path') //路径模块 const serve = require('koa-static') // koa静态资源管理模块 const opn = require('opn') // 启动服务直接在浏览器中打开 const log = require('../utils/log') const index = serve(path.join(__dirname, '../../template/ceshi')); // 设置静态项目访问路径(此处的dist为webpack打包生成的项目文件夹名称) class koaServer { constructor() { } init() { const app = new Koa(); app.use(bodyParser()); app.use(logger((str, args) =&gt; { // console.log(str); // console.log(args); })); app.use(json()); app.use(cors()); app.use(index); // 将路由中间件注册到应用程序上 let router = require('../router'); app.use(router.routes()).use(router.allowedMethods()); app.listen(3000, () =&gt; { log.info('Server is running at http://localhost:3000'); opn('http://localhost:3000'); }) app.on('error', err =&gt; { log.error('server error', err) }); } } module.exports = new koaServer()","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/node/koa.html"}],["meta",{"property":"og:site_name","content":"jiwei.zhao"}],["meta",{"property":"og:title","content":"Koa 服务"}],["meta",{"property":"og:description","content":"Koa是一个基于Node.js平台的下一代web框架，它使用了ES6的特性，并且非常轻量级。Koa的核心思想是中间件（middleware），通过洋葱模型（onion model）来处理HTTP请求和响应。 inquirer的基本使用 const Koa = require('koa') const logger = require('koa-logger') // 打印日志 const json = require('koa-json') //格式化网页中获取的json数据 const cors = require('koa2-cors') // 解决跨域问题 const bodyParser = require('koa-bodyparser') // 利用koa-bodyparser来处理POST请求参数 const path = require('path') //路径模块 const serve = require('koa-static') // koa静态资源管理模块 const opn = require('opn') // 启动服务直接在浏览器中打开 const log = require('../utils/log') const index = serve(path.join(__dirname, '../../template/ceshi')); // 设置静态项目访问路径(此处的dist为webpack打包生成的项目文件夹名称) class koaServer { constructor() { } init() { const app = new Koa(); app.use(bodyParser()); app.use(logger((str, args) =&gt; { // console.log(str); // console.log(args); })); app.use(json()); app.use(cors()); app.use(index); // 将路由中间件注册到应用程序上 let router = require('../router'); app.use(router.routes()).use(router.allowedMethods()); app.listen(3000, () =&gt; { log.info('Server is running at http://localhost:3000'); opn('http://localhost:3000'); }) app.on('error', err =&gt; { log.error('server error', err) }); } } module.exports = new koaServer()"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-08T06:39:25.000Z"}],["meta",{"property":"article:author","content":"jiwei.zhao"}],["meta",{"property":"article:tag","content":"node"}],["meta",{"property":"article:tag","content":"Koa"}],["meta",{"property":"article:published_time","content":"2023-06-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-08T06:39:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Koa 服务\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-29T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-08T06:39:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"jiwei.zhao\\",\\"url\\":\\"https://mrhope.site\\"}]}"]]},"headers":[{"level":2,"title":"inquirer的基本使用","slug":"inquirer的基本使用","link":"#inquirer的基本使用","children":[]},{"level":2,"title":"koa官网","slug":"koa官网","link":"#koa官网","children":[]}],"git":{"createdTime":1702017565000,"updatedTime":1702017565000,"contributors":[{"name":"jiwei.zhao","email":"jiwei.zhao@zhaopin.com.cn","commits":1}]},"readingTime":{"minutes":2.25,"words":675},"filePathRelative":"posts/node/koa.md","localizedDate":"2023年6月29日","excerpt":"<p>Koa是一个基于Node.js平台的下一代web框架，它使用了ES6的特性，并且非常轻量级。Koa的核心思想是中间件（middleware），通过洋葱模型（onion model）来处理HTTP请求和响应。</p>\\n<h2> inquirer的基本使用</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> Koa <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'koa'</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">const</span> logger <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'koa-logger'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// 打印日志</span>\\n<span class=\\"token keyword\\">const</span> json <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'koa-json'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">//格式化网页中获取的json数据</span>\\n<span class=\\"token keyword\\">const</span> cors <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'koa2-cors'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// 解决跨域问题</span>\\n<span class=\\"token keyword\\">const</span> bodyParser <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'koa-bodyparser'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// 利用koa-bodyparser来处理POST请求参数</span>\\n<span class=\\"token keyword\\">const</span> path <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'path'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">//路径模块</span>\\n<span class=\\"token keyword\\">const</span> serve <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'koa-static'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// koa静态资源管理模块</span>\\n<span class=\\"token keyword\\">const</span> opn <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'opn'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// 启动服务直接在浏览器中打开</span>\\n<span class=\\"token keyword\\">const</span> log <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'../utils/log'</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">const</span> index <span class=\\"token operator\\">=</span> <span class=\\"token function\\">serve</span><span class=\\"token punctuation\\">(</span>path<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">join</span><span class=\\"token punctuation\\">(</span>__dirname<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'../../template/ceshi'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 设置静态项目访问路径(此处的dist为webpack打包生成的项目文件夹名称)</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">koaServer</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">constructor</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token function\\">init</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">const</span> app <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Koa</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        app<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">use</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">bodyParser</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        app<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">use</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">logger</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">str<span class=\\"token punctuation\\">,</span> args</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token comment\\">// console.log(str);</span>\\n            <span class=\\"token comment\\">// console.log(args);</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        app<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">use</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">json</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        app<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">use</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">cors</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        app<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">use</span><span class=\\"token punctuation\\">(</span>index<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 将路由中间件注册到应用程序上</span>\\n        <span class=\\"token keyword\\">let</span> router <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'../router'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        app<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">use</span><span class=\\"token punctuation\\">(</span>router<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">routes</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">use</span><span class=\\"token punctuation\\">(</span>router<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">allowedMethods</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        app<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">listen</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">3000</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n            log<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">info</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Server is running at http://localhost:3000'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token function\\">opn</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'http://localhost:3000'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n        app<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">on</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'error'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token parameter\\">err</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n            log<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">error</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'server error'</span><span class=\\"token punctuation\\">,</span> err<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\nmodule<span class=\\"token punctuation\\">.</span>exports <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">koaServer</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
