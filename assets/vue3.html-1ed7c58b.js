import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as t,c as o,b as s,e as n,f as r,d as l}from"./app-9e638689.js";const c={},i=l(`<h2 id="特性" tabindex="-1"><a class="header-anchor" href="#特性" aria-hidden="true">#</a> 特性</h2><p>由于之前使用的是vue2，现在升级到vue3，这里做一下笔记</p><p>vue-cli：vue3.0之前版本使用此名称</p><p>@vue/cli：vue3.0之后版本包括3.0版本使用此名称</p><h4 id="_1-清除之前的脚手架-卸载3-0之前的版本" tabindex="-1"><a class="header-anchor" href="#_1-清除之前的脚手架-卸载3-0之前的版本" aria-hidden="true">#</a> 1 清除之前的脚手架 卸载3.0之前的版本</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm uninstall <span class="token operator">-</span>g vue<span class="token operator">-</span>cli
yarn global remove vue<span class="token operator">-</span>cli
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-安装最新的版本" tabindex="-1"><a class="header-anchor" href="#_2-安装最新的版本" aria-hidden="true">#</a> 2 安装最新的版本</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm install <span class="token operator">-</span>g @vue<span class="token operator">/</span>cli
yarn global add @vue<span class="token operator">/</span>cli
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>安装完毕后，就可以使用vue命令创脚手架demo了。 如果不可以使用，可以重启电脑后就没有问题了</p><h2 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目" aria-hidden="true">#</a> 创建项目</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>vue create hello<span class="token operator">-</span>world
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="选择配置方式" tabindex="-1"><a class="header-anchor" href="#选择配置方式" aria-hidden="true">#</a> 选择配置方式</h4><p>按键盘上下键选择默认（default）或者是手动（Manually），若是选择defaule，则一路回车执行即可。这里我选择的是manually。</p><h4 id="选择配置项-看个人项目需求-注意-空格键是选中与取消-a键是全选-其中" tabindex="-1"><a class="header-anchor" href="#选择配置项-看个人项目需求-注意-空格键是选中与取消-a键是全选-其中" aria-hidden="true">#</a> 选择配置项，看个人项目需求，注意：空格键是选中与取消，A键是全选；其中：</h4><p>TypeScript 支持使用 TypeScript 书写源码<br> Progressive Web App (PWA) Support PWA 支持。<br> Router 支持 vue-router 。<br> Vuex 支持 vuex 。<br> CSS Pre-processors 支持 CSS 预处理器。<br> Linter / Formatter 支持代码风格检查和格式化。<br> Unit Testing 支持单元测试。<br> E2E Testing 支持 E2E 测试。</p><p>这里我选择的是Babel、Router、Vuex、CSS Pre-processors 。</p><h4 id="选择路由模式" tabindex="-1"><a class="header-anchor" href="#选择路由模式" aria-hidden="true">#</a> 选择路由模式</h4><p>路由模式选择是否为histor，选择y；</p><h4 id="选择css预编译类型" tabindex="-1"><a class="header-anchor" href="#选择css预编译类型" aria-hidden="true">#</a> 选择CSS预编译类型</h4><p>选择CSS样式预编译器，我选择sass/scss（with node-sass）</p><h4 id="选择配置文件存放的地方" tabindex="-1"><a class="header-anchor" href="#选择配置文件存放的地方" aria-hidden="true">#</a> 选择配置文件存放的地方</h4><p>第一个是独立的文件夹位置，第二个是package.json文件中，选择第一个。</p><h4 id="是否记录配置内容" tabindex="-1"><a class="header-anchor" href="#是否记录配置内容" aria-hidden="true">#</a> 是否记录配置内容</h4><p>询问是否记录这一次的配置，以便下一次使用，选择N，不记录。</p><h4 id="回车执行创建项目" tabindex="-1"><a class="header-anchor" href="#回车执行创建项目" aria-hidden="true">#</a> 回车执行创建项目</h4><p>按照提示进入项目文件，并运行(npm run serve),在浏览器中输入下图所示链接则启动项目</p><h4 id="在根目录下创建vue-config-js" tabindex="-1"><a class="header-anchor" href="#在根目录下创建vue-config-js" aria-hidden="true">#</a> 在根目录下创建vue.config.js</h4><p>vue-cli升级到3后，减少了很多的配置文件，将所有的配置项都浓缩到了vue.config.js中，若是项目的根目录中存在这个文件（与package.json同级），那么它就会被@vue/cli-service自动加载，vue.config.js中导出的是一个包含了选项的对象：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//vue.config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">baseUrl</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span><span class="token comment">// 部署应用时的根路径(默认&#39;/&#39;),也可用相对路径(存在使用限制)，注意：从 Vue CLI 3.3 起已弃用，请使用 ***publicPath***</span>
  <span class="token literal-property property">outputDir</span><span class="token operator">:</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">,</span><span class="token comment">// 运行时生成的生产环境构建文件的目录(默认&#39;&#39;dist&#39;&#39;，构建之前会被清除)</span>
  <span class="token literal-property property">assetsDir</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span><span class="token comment">//放置生成的静态资源(s、css、img、fonts)的(相对于 outputDir 的)目录(默认&#39;&#39;)</span>
  <span class="token literal-property property">indexPath</span><span class="token operator">:</span> <span class="token string">&#39;index.html&#39;</span><span class="token punctuation">,</span><span class="token comment">//指定生成的 index.html 的输出路径(相对于 outputDir)也可以是一个绝对路径。</span>
  <span class="token literal-property property">pages</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token comment">//pages 里配置的路径和文件名在你的文档目录必须存在 否则启动服务会报错</span>
    <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token comment">//除了 entry 之外都是可选的</span>
      <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&#39;src/index/main.js&#39;</span><span class="token punctuation">,</span><span class="token comment">// page 的入口,每个“page”应该有一个对应的 JavaScript 入口文件</span>
      <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;public/index.html&#39;</span><span class="token punctuation">,</span><span class="token comment">// 模板来源</span>
      <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;index.html&#39;</span><span class="token punctuation">,</span><span class="token comment">// 在 dist/index.html 的输出</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Index Page&#39;</span><span class="token punctuation">,</span><span class="token comment">// 当使用 title 选项时,在 template 中使用：&lt;title&gt;&lt;%= htmlWebpackPlugin.options.title %&gt;&lt;/title&gt;</span>
      <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;chunk-vendors&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chunk-common&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;index&#39;</span><span class="token punctuation">]</span> <span class="token comment">// 在这个页面中包含的块，默认情况下会包含,提取出来的通用 chunk 和 vendor chunk</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">subpage</span><span class="token operator">:</span> <span class="token string">&#39;src/subpage/main.js&#39;</span><span class="token comment">//官方解释：当使用只有入口的字符串格式时,模板会被推导为&#39;public/subpage.html&#39;,若找不到就回退到&#39;public/index.html&#39;,输出文件名会被推导为&#39;subpage.html&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lintOnSave</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">// 是否在保存的时候检查</span>
  <span class="token literal-property property">productionSourceMap</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">// 生产环境是否生成 sourceMap 文件</span>
  <span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">extract</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">// 是否使用css分离插件 ExtractTextPlugin</span>
    <span class="token literal-property property">sourceMap</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><span class="token comment">// 开启 CSS source maps</span>
    <span class="token literal-property property">loaderOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">// css预设器配置项</span>
    <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token comment">// 启用 CSS modules for all css / pre-processor files.</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token comment">// 环境配置</span>
    <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">8080</span><span class="token punctuation">,</span>
    <span class="token literal-property property">https</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">hotOnly</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//配置自动启动浏览器</span>
    <span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token comment">// 配置多个代理(配置一个 proxy: &#39;http://localhost:4000&#39; )</span>
      <span class="token string-property property">&#39;/api&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&#39;&lt;url&gt;&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">ws</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">changeOrigin</span><span class="token operator">:</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;/foo&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&#39;&lt;other_url&gt;&#39;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">pluginOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token comment">// 第三方插件配置</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,29),u={href:"https://cli.vuejs.org/zh/config/#vue-config-js",target:"_blank",rel:"noopener noreferrer"};function d(k,v){const a=p("ExternalLinkIcon");return t(),o("div",null,[i,s("p",null,[n("vue.config.js的具体配置可参考："),s("a",u,[n("https://cli.vuejs.org/zh/config/#vue-config-js"),r(a)])])])}const b=e(c,[["render",d],["__file","vue3.html.vue"]]);export{b as default};
