import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as e,c as o,a as n,d as c,b as p,e as i}from"./app-fcda9f85.js";const r={},l=i(`<p>&quot;commander&quot;是一个流行的第三方库，用于创建命令行工具。使用&quot;commander&quot;库，可以轻松地定义命令行选项和参数，并处理用户输入的命令。这使得开发者可以快速构建自己的命令行应用程序，例如CLI工具、脚本或服务等。&quot;commander&quot;库还提供了许多有用的功能，如帮助信息生成、版本控制、子命令支持等。因此，&quot;commander&quot;在Node.js中被广泛用于开发各种类型的命令行应用程序。</p><h2 id="commander的基本使用" tabindex="-1"><a class="header-anchor" href="#commander的基本使用" aria-hidden="true">#</a> commander的基本使用</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> program <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;commander&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//node.js命令行界面的完整解决方案</span>
<span class="token keyword">const</span> command <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./command/index&#39;</span><span class="token punctuation">)</span>

program
    <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;init&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;command init&#39;</span><span class="token punctuation">)</span>
        command<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> argvList <span class="token operator">=</span> process<span class="token punctuation">.</span>argv
program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>argvList<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="commander官网" tabindex="-1"><a class="header-anchor" href="#commander官网" aria-hidden="true">#</a> commander官网</h2>`,4),u={href:"https://github.com/tj/commander.js",target:"_blank",rel:"noopener noreferrer"};function d(m,k){const a=t("ExternalLinkIcon");return e(),o("div",null,[l,n("p",null,[n("a",u,[c("Commander.js"),p(a)])])])}const b=s(r,[["render",d],["__file","commander.html.vue"]]);export{b as default};
